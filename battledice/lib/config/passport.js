// Generated by CoffeeScript 1.3.3
(function() {
  var Player, User, config, mongoose;

  mongoose = require('mongoose');

  User = mongoose.model('User');

  Player = mongoose.model('Player');

  config = require('./config');

  module.exports = function(passport) {
    var FacebookStrategy, LocalStrategy;
    LocalStrategy = require('passport-local').Strategy;
    FacebookStrategy = require('passport-facebook').Strategy;
    passport.serializeUser(function(user, done) {
      return done(null, user);
    });
    passport.deserializeUser(function(obj, done) {
      return done(null, obj);
    });
    passport.use(new LocalStrategy(function(username, password, done) {
      return User.findOne({
        username: username
      }, function(err, user) {
        if (err) {
          return done(err);
        }
        if (!user) {
          return done(null, false, {
            message: "Unknown user: " + username
          });
        }
        return user.comparePassword(password, function(err, isMatch) {
          if (err) {
            return done(err);
          }
          if (isMatch) {
            return done(null, user);
          } else {
            return done(null, false, {
              message: 'Invalid password'
            });
          }
        });
      });
    }));
    return passport.use(new FacebookStrategy({
      clientID: config.facebook.clientID,
      clientSecret: config.facebook.clientSecret,
      callbackURL: config.facebook.callbackURL
    }, function(accessToken, refreshToken, profile, done) {
      return User.findOne({
        "facebook.id": profile.id
      }, function(err, user) {
        var player;
        if (err) {
          return done(err);
        }
        if (!user) {
          user = new User({
            name: profile.displayName,
            email: profile.emails[0].value,
            username: profile.username,
            provider: 'facebook',
            facebook: profile._json
          });
          player = new Player({
            username: profile.username
          });
          player.initialize();
          return user.save(function(err) {
            if (err) {
              console.log(err);
            }
            return player.save(function(err) {
              return done(err, user);
            });
          });
        } else {
          return done(err, user);
        }
      });
    }));
  };

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var Player, PlayerSchema, Schema, config, getTags, mongoose, setTags;

  mongoose = require('mongoose');

  config = require('../../config/config');

  getTags = function(tags) {
    return tags.join(',');
  };

  setTags = function(tags) {
    return tags.split(',');
  };

  Schema = mongoose.Schema;

  PlayerSchema = new Schema({
    username: {
      type: String,
      trim: true,
      required: true
    },
    heroes: {
      type: Schema.Types.Mixed,
      "default": {}
    },
    activeSet: [],
    xp: {
      type: Number,
      required: true,
      "default": 0
    },
    level: {
      type: Number,
      required: true,
      "default": 1
    }
  });

  PlayerSchema.pre('save', function(next) {
    return next();
  });

  PlayerSchema.methods.initialize = function() {
    var hero, heroes, _i, _len;
    heroes = config.heroes;
    for (_i = 0, _len = heroes.length; _i < _len; _i++) {
      hero = heroes[_i];
      this.activeSet.push(hero.name);
      this.heroes[hero.name] = {
        level: 1,
        stones: 0
      };
    }
  };

  PlayerSchema.statics = {
    list: function(cb) {
      this.find().sort({
        username: 1
      }).exec(cb);
    }
  };

  Player = mongoose.model('Player', PlayerSchema);

}).call(this);

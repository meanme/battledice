// Generated by CoffeeScript 1.3.3
(function() {
  var app, auth, certificate, config, express, fs, http, https, models_path, mongoose, passport, port, privateKey;

  express = require('express');

  http = require('http');

  https = require('https');

  fs = require('fs');

  passport = require('passport');

  mongoose = require('mongoose');

  config = require('../config/config');

  auth = require('../config/middlewares/authorization');

  privateKey = fs.readFileSync(__dirname + '/battledice-key.pem');

  certificate = fs.readFileSync(__dirname + '/battledice-cert.pem');

  console.log("Connection to database at " + config.db);

  mongoose.connect(config.db);

  models_path = "" + __dirname + "/../app/models";

  fs.readdirSync(models_path).forEach(function(file) {
    return require("" + models_path + "/" + file);
  });

  require('../config/passport')(passport, config);

  app = express();

  require('../config/express')(app, config, passport);

  require('../config/routes')(app, passport, auth);

  require('../app/helpers/general')(app);

  port = process.env.PORT || 3000;

  http.createServer(app).listen(port, function() {
    return console.log("" + process.pid + ", listening. Go to: http://localhost:" + port + "/");
  });

  /*
  https.createServer(
      key: privateKey
      cert: certificate
  ).listen 8080, ->
      console.log 'secure server started'
  */


  /*
  expressApp.configure( () ->
      expressApp.set 'viewss', "#{__dirname}/views"
      expressApp.set 'view engine', 'jade'
      expressApp.use express.cookieParser()
      expressApp.use express.bodyParser()
      expressApp.use express.methodOverride()
      expressApp.use express.session secret : 'blutfurblut'
  )
  
  
  port = process.env.PORT
  port ?= 3000
  
  expressApp.listen port, () ->
      console.log "#{process.pid}, listening. Go to: http://localhost:#{port}"
  */


}).call(this);
